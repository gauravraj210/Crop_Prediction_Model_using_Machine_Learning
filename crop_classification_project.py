# -*- coding: utf-8 -*-
"""Crop_classification_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nbm5RJa6gL_kEiwFb77Nibzb2A9PYLQl

# Sowing Success: How Machine Learning Helps Farmers Select the Best Crops

![Farmer in a field](farmer_in_a_field.jpg)

Measuring essential soil metrics such as nitrogen, phosphorous, potassium levels, and pH value is an important aspect of assessing soil condition. However, it can be an expensive and time-consuming process, which can cause farmers to prioritize which metrics to measure based on their budget constraints.

Farmers have various options when it comes to deciding which crop to plant each season. Their primary objective is to maximize the yield of their crops, taking into account different factors. One crucial factor that affects crop growth is the condition of the soil in the field, which can be assessed by measuring basic elements such as nitrogen and potassium levels. Each crop has an ideal soil condition that ensures optimal growth and maximum yield.

A farmer reached out to you as a machine learning expert for assistance in selecting the best crop for his field. They've provided you with a dataset called `soil_measures.csv`, which contains:

- `"N"`: Nitrogen content ratio in the soil
- `"P"`: Phosphorous content ratio in the soil
- `"K"`: Potassium content ratio in the soil
- `"pH"` value of the soil
- `"crop"`: categorical values that contain various crops (target variable).

Each row in this dataset represents various measures of the soil in a particular field. Based on these measurements, the crop specified in the `"crop"` column is the optimal choice for that field.  

In this project, you will build multi-class classification models to predict the type of `"crop"` and identify the single most importance feature for predictive performance.
"""

#Import the libraries
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn import metrics

# Load the dataset
crops = pd.read_csv("soil_measures.csv")

# see some first row of the dataset
crops.head()

# understand your dataset using .info() method
crops.info()

#Create dummy variables for the 'crop' column (do this only once)
Crops_dummies = pd.get_dummies(crops['crop'], drop_first=True)

# check data type of Crops_dummies
Crops_dummies = Crops_dummies.astype(int)
print(Crops_dummies.dtypes)

# Step 2: Concatenate the dummy variables with the original dataframe
crops = pd.concat([crops, Crops_dummies], axis=1)
crops.head()

# Step 3: Drop the original 'crop' column and update the dataframe correctly
crops.drop(['crop'], axis=1, inplace=True)

crops.head()

# Define X and y
X = crops[['N','P','K','ph']] # Use square brackets to select columns for X
y = crops.drop(['N','P','K','ph'], axis=1) # Use .drop with square brackets and axis=1 for y

#split the X and y into train and test datasets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# iniitiate the logistic regression with multinomial thing
logreg = LogisticRegression(multi_class='multinomial', solver='lbfgs')

# fit the model on traning dataset
logreg.fit(X_train, y_train)

# see the model score on tetsting dataset
logreg.score(X_test, y_test)